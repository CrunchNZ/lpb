name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web
      run: npm run build:react
      env:
        VITE_SOLANA_RPC_URL: https://api.mainnet-beta.solana.com
        VITE_DEXSCREENER_API_URL: https://api.dexscreener.com
        VITE_JUPITER_API_URL: https://quote-api.jup.ag/v6

    - name: Package Electron app and publish
      run: npm run build:electron -- --publish always
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
    
    - name: Upload dist artifacts (fallback)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ runner.os }}
        path: dist/**
        retention-days: 7
    
    - name: Notify release
      run: |
        echo "Release ${{ github.ref }} has been created successfully!"
        echo "Download URL: ${{ steps.create_release.outputs.html_url }}" 